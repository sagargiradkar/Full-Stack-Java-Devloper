======================
||      Class 7     ||
======================
1] Assignment => Complex Problems on Pattern Printing

Agenda =>
Pattern Programming 
Classes & Objects 
JVM Dataareas 
What is Class And Objects 

Today's topic of discussion
---------------------------
Introduction to oops(classws and Objects) -> Navin Sir
Types of Variables
    Division - 1
        a.primitive variables
        b.reference variables
        c.static variables
JVM Area for execution
    a.MethodAred (.class data /static data)
    b.Heap Area (instance variables / object data)
    c.Stack Area (local variable)
    d.PC-Register 
    e.Native method Area

Code snippits (30 min)


OOPs
------
It is actually theoty concept,which is implemented by many Programming languages like c++,Java,Python,.....
Any real time Problem can be solved if we follow oop's principles.
In OOPs , while solving the problem 
    1.We need to first make the Objects.
    2.Every Object we mark should have 2 parts
            a.HAS-PART /Fields/attributes/(store the information as variables)
            b.DOES-PART /Behaviours(represent them as method)
    3.To represent an Object , first we need have a blueprint of an Object.
    4.We use "new" keyword/reserve word to create an Object for a blueprint
    5.Every object should always be in constant interaction
    6.Useless Object doesn't exists.


What is Objects ?
        Physical existance of any element we say as Object.
            eg: book,Car,Computer,Dog,Students......


What is HAS_PART And What is DOES-Part of an object represents ?

    HAS-PART => Indicates what it can hold
    DOES-PART => Indicates what it can do 
        eg.Student
            |=>sid,name,age,gender,email,address(variables/identifier)
            |=>play,stydy,drink,sleep(Sleep) (methods)

What is blueprint in Java and how to represent it ?
    in Java to represent a blueprint we have a reserve word called "class" .
    Conventions followed by Java devlopers while writting a class is 
        a.className should be in "PascalConvention" .
            eg:BufferReader,FileReader,InputStream,OutputStrim,String
        b.variables are represent in "camelCase"
            eg:regNo,firstName,lastName,length,studId,javaFullStack,..........
        c.methods are represeted in "camelCase",
            eg:toUpper(),toLower(),toString(),nextInt(),.....


EG#1. 

//blueprint of Student Object
class Student { //Student -> PascalConvention

    //HAS_PART ----> camelCaseConvention
    int sid,
    String name;
    int age;
    char gender;
    String address;

    //DOES-PART // camelCaseConvention
    void play(){}
    void study(){}
    void drink(){}
    void sleep(){}
    
}

To create an object in java we use "new" keyword
    int x = 10; (primitive)
Syntax : 
    ClassName variable = new ClassName();

new -> it is a signal to JVM to create some space for the Object in the heap area.
    Tell the className , we inform the className,JVM create the object and sends the "hashCode" to the user .
    User should collect the hashcode through "reference variable".

realtime example : BookMyShow
        Objects : Person , Ticket , TicketIssuer ,CinemaHall , 3D-glass,Screen ,......

Note :  Software measns collection of many programs
        Programs means set of instructions.
        To write instructions we need to have a languages.


Student std = new Student(); // Object 

Types of variables
=====================
int a=10;
Student std = new Student();